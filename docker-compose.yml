version: "3"
services:
  odoo:
    image: odoo:12.0
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - internal
    environment:
      - HOST=db
      - USER=${ODOO_USER}
      - PASSWORD=${ODOO_PASS}
      - ./odoo/odoo-web-data:/var/lib/odoo
      - ./odoo/addons:/mnt/extra-addons
      - ./odoo/logs:/var/log/odoo
    labels:
      - 'traefik.http.routers.odoo.rule=Host(`${ODOO_TRAEFIK_URL}`)'
      - 'traefik.http.routers.odoo.entrypoints=websecure'
      - 'traefik.http.routers.odoo.tls.certresolver=odoo'
      - 'traefik.port=8069'
  db:
    image: postgres:10
    restart: unless-stopped
    networks:
      - internal
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=${ODOO_USER}
      - POSTGRES_PASSWORD=${ODOO_PASS}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
  odoo2:
    image: odoo:12.0
    depends_on:
      - db2
    restart: unless-stopped
    networks:
      - internal
    environment:
      - HOST=db2
      - USER=odoo2
      - PASSWORD=odoo2
    volumes:
      - ./odoo2/odoo-web-data:/var/lib/odoo2
      - ./odoo2/config:/etc/odoo2
      - ./odoo2/addons:/mnt/extra-addons
      - ./odoo2/logs:/var/log/odoo2
    labels:
      - 'traefik.http.routers.odoo2.rule=Host(`test.mydomain.com`)'
      - 'traefik.http.routers.odoo2.entrypoints=websecure'
      - 'traefik.http.routers.odoo2.tls.certresolver=odoo'
      - 'traefik.port=8069'
  db2:
    image: postgres:10
    restart: unless-stopped
    networks:
      - internal
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=odoo2
      - POSTGRES_PASSWORD=odoo2
      - PGDATA=/var/lib/postgresql/data/pgdata2
    volumes:
      - ./pgdata2:/var/lib/postgresql/data/pgdata2
  traefik:
    image: traefik:v2.0
    networks:
      - internal
      - web
    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      - "./traefik/letsencrypt:/letsencrypt"
      - "./traefik/traefik.yml:/etc/traefik.yml"
      - "/var/run/docker.sock:/var/run/docker.sock"
    labels:
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https@docker"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    command:
     - "--log.level=DEBUG"
     - "--api.insecure=true"
     - "--providers.docker"
     - "--providers.docker.defaultRule=Host(`{{ trimPrefix `/` .Name }}.${TRAEFIK_DEFAULT_DOMAIN}`)"
     - "--entryPoints.web.address=:80"
     - "--entryPoints.websecure.address=:443"
     - "--certificatesResolvers.odoo.acme.httpchallenge=true"
     - "--certificatesresolvers.odoo.acme.httpchallenge.entrypoint=web"
     - "--certificatesresolvers.odoo.acme.email=${ACME_EMAIL}"
     - "--certificatesresolvers.odoo.acme.storage=/letsencrypt/acme.json"
networks:
  internal:
  web:
      external: true
